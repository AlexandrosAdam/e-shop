{"version":3,"file":"styles.js","sources":["../../../../../src/components/Modal/styles.ts"],"sourcesContent":["import { css, Theme, SerializedStyles } from \"@emotion/react\";\nimport { Size } from \"./Modal\";\nimport { mq } from \"@theme/utils/breakpoints\";\n\nconst widthDimensions = {\n  md: \"32rem\",\n  lg: \"64rem\",\n  fullscreen: \"100%\",\n};\n\nexport const modalContent = css`\n  padding: 1.5rem;\n`;\n\nexport const modalHeader = ({ modal }: Theme): SerializedStyles => {\n  return css`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    padding: 1.25rem;\n    border-bottom: 1px solid ${modal.border};\n\n    .close-btn {\n      svg {\n        color: ${modal.color};\n\n        &:hover {\n          color: ${modal.iconHover};\n        }\n      }\n    }\n  `;\n};\n\nexport const modalFooter = ({ modal }: Theme): SerializedStyles => {\n  return css`\n    padding: 1.25rem;\n    border-top: 1px solid ${modal.border};\n  `;\n};\n\n// plain styles as string\nexport const portalStyles = (size: Size): SerializedStyles => {\n  return css`\n    .overlay-base {\n      position: fixed;\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n      display: flex;\n      justify-content: center;\n      align-items: center;\n      background-color: rgba(0, 0, 0, 0.45);\n      opacity: 0;\n      z-index: 9999;\n      transition: opacity 0.2s ease-in-out;\n\n      &.overlay-before {\n        opacity: 0;\n      }\n    }\n\n    .overlay-after {\n      opacity: 1;\n    }\n\n    .content-after {\n      background-color: #fff;\n      height: 100%;\n      width: 100%;\n      border-radius: 0;\n\n      ${mq[\"md\"]} {\n        height: auto;\n        border-radius: 5px;\n        width: ${widthDimensions[size]};\n        max-width: 90%;\n      }\n\n      ${size === \"fullscreen\" &&\n      `\n      display: flex;\n      flex-direction: column;\n      justify-content: space-between;\n    `}\n    }\n  `;\n};\n"],"names":["widthDimensions","md","lg","fullscreen","modalContent","modalHeader","modal","css","border","color","iconHover","modalFooter","portalStyles","size","mq"],"mappings":";;;;;;;;;;;;AAIA,IAAMA,eAAe,GAAG;AACtBC,EAAAA,EAAE,EAAE,OADkB;AAEtBC,EAAAA,EAAE,EAAE,OAFkB;AAGtBC,EAAAA,UAAU,EAAE,MAAA;AAHU,CAAxB,CAAA;IAMaC,YAAY,GAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA;AAAA,EAAA,IAAA,EAAA,SAAA;AAAA,EAAA,MAAA,EAAA,gBAAA;AAAA,CAAA,GAAA;AAAA,EAAA,IAAA,EAAA,sBAAA;AAAA,EAAA,MAAA,EAAA,oCAAA;AAAA,EAAA,GAAA,EAAA,ioFAAA;AAAA,EAAA,QAAA,EAAA,gCAAA;AAAA,EAAlB;AAIMC,IAAAA,WAAW,GAAG,SAAdA,WAAc,CAAwC,IAAA,EAAA;AAAA,EAArCC,IAAAA,KAAqC,QAArCA,KAAqC,CAAA;AACjE,EAAA;AAAA;;AAAA;AAAOC,IAAAA,GAAP,CAAA,wGAAA,EAK6BD,KAAK,CAACE,MALnC,EAAA,wBAAA,EASeF,KAAK,CAACG,KATrB,EAAA,iBAAA,EAYiBH,KAAK,CAACI,SAZvB,EAAA,MAAA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,qBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,ioFAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,qBAAA,CAAA;AAAA,IAAA;AAiBD,EAlBM;AAoBMC,IAAAA,WAAW,GAAG,SAAdA,WAAc,CAAwC,KAAA,EAAA;AAAA,EAArCL,IAAAA,KAAqC,SAArCA,KAAqC,CAAA;AACjE,EAAA;AAAA;;AAAA;AAAOC,IAAAA,GAAP,CAAA,uCAAA,EAE0BD,KAAK,CAACE,MAFhC,EAAA,GAAA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,qBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,ioFAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,qBAAA,CAAA;AAAA,IAAA;AAID;;IAGYI,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAkC;AAC5D,EAAA;AAAA;;AAAA;AAAON,IAAAA,GAAP,CAAA,uVAAA,EAqCMM,IAAI,KAAK,YAAT,IArCN,oGAAA,EAAA,GAAA,EA8BMC,EAAE,CAAC,IAAD,CA9BR,EAAA,uCAAA,EAiCed,eAAe,CAACa,IAAD,CAjC9B,EAAA,mBAAA,IAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,sBAAA,CAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,ioFAAA,EAAA,OAAA,CAAA,GAAA,CAAA,QAAA,KAAA,YAAA,GAAA,EAAA,GAAA,sBAAA,CAAA;AAAA,IAAA;AA6CD;;;;"}