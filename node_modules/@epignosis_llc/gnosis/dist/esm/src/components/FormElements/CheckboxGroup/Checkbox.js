
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import { forwardRef } from 'react';
import { checkboxContainer } from './styles.js';
import { createElement as jsx } from '../../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';

var _excluded = ["id", "label", "size", "inline", "containerAttrs", "isPartiallySelected"];

var Checkbox = function Checkbox(props, ref) {
  var id = props.id,
      label = props.label,
      _props$size = props.size,
      size = _props$size === void 0 ? "md" : _props$size,
      _props$inline = props.inline,
      inline = _props$inline === void 0 ? false : _props$inline,
      containerAttrs = props.containerAttrs,
      isPartiallySelected = props.isPartiallySelected,
      rest = _objectWithoutProperties(props, _excluded);

  return jsx("div", _extends({
    ref: ref,
    css: function css(theme) {
      return checkboxContainer(theme, {
        size: size,
        inline: inline
      });
    }
  }, containerAttrs), isPartiallySelected && jsx("span", {
    "data-testid": "is-partially-selected",
    className: "dash"
  }), jsx("input", _extends({
    id: id,
    type: "checkbox"
  }, rest)), jsx("label", {
    htmlFor: id
  }, jsx("span", {
    className: "shadow-element",
    tabIndex: -1,
    "aria-hidden": "true"
  }), label));
};

var Checkbox$1 = /*#__PURE__*/forwardRef(Checkbox);

export { Checkbox$1 as default };
//# sourceMappingURL=Checkbox.js.map
