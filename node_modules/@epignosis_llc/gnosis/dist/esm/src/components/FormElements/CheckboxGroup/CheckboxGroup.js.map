{"version":3,"file":"CheckboxGroup.js","sources":["../../../../../../src/components/FormElements/CheckboxGroup/CheckboxGroup.tsx"],"sourcesContent":["import React, { FC, ChangeEvent, useState, useEffect } from \"react\";\nimport { InputSize } from \"../Input/Input\";\nimport Checkbox, { CheckboxOption } from \"./Checkbox\";\nimport { checkboxGroupContainer } from \"./styles\";\n\nexport type CheckboxGroupProps = React.HTMLAttributes<HTMLFieldSetElement> & {\n  groupname: string;\n  options: CheckboxOption[];\n  onChange?: (selectedValues: string[]) => void;\n  initialValues?: string[];\n  inline?: boolean;\n  size?: InputSize;\n};\n\nconst CheckboxGroup: FC<CheckboxGroupProps> = ({\n  groupname,\n  options,\n  onChange,\n  initialValues = [],\n  inline = false,\n  size = \"md\",\n  ...rest\n}) => {\n  const [selectedValues, setSelectedValues] = useState(initialValues);\n  const isPartiallySelected = selectedValues.length > 0 && selectedValues.length < options.length;\n  const ariaChecked = isPartiallySelected ? \"mixed\" : selectedValues.length === options.length;\n  const selectValues = (e: ChangeEvent<HTMLInputElement>): void => {\n    const selectedValue = e.target.value;\n    if (selectedValues.includes(selectedValue)) {\n      setSelectedValues(selectedValues.filter((value) => selectedValue !== value));\n    } else {\n      setSelectedValues([...selectedValues, selectedValue]);\n    }\n  };\n  const handleGroupChange = (): void => {\n    if (selectedValues.length) {\n      setSelectedValues([]);\n    } else {\n      setSelectedValues(options.filter((option) => !option.disabled).map((option) => option.value));\n    }\n  };\n\n  useEffect(() => {\n    onChange && onChange(selectedValues);\n  }, [selectedValues, onChange]);\n\n  return (\n    <fieldset css={checkboxGroupContainer(inline)} {...rest}>\n      <legend>\n        {isPartiallySelected && <span className=\"dash\" />}\n        <Checkbox\n          id={`${groupname}-container`}\n          label={groupname}\n          name={groupname}\n          value=\"\"\n          onChange={handleGroupChange}\n          size={size}\n          checked={selectedValues.length > 0}\n          aria-checked={ariaChecked}\n          inline\n        />\n      </legend>\n      <ul>\n        {options.map((option) => (\n          <li key={option.name}>\n            <Checkbox\n              id={`${groupname}-${option.value}`}\n              size={size}\n              checked={selectedValues.includes(option.value)}\n              onChange={selectValues}\n              inline\n              {...option}\n            />\n          </li>\n        ))}\n      </ul>\n    </fieldset>\n  );\n};\n\nexport default CheckboxGroup;\n"],"names":["CheckboxGroup","groupname","options","onChange","initialValues","inline","size","rest","useState","selectedValues","setSelectedValues","isPartiallySelected","length","ariaChecked","selectValues","e","selectedValue","target","value","includes","filter","handleGroupChange","option","disabled","map","useEffect","___EmotionJSX","checkboxGroupContainer","name"],"mappings":"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"}