
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import { forwardRef } from 'react';
import classNames from '../../../../node_modules/classnames/index.js';
import Label from '../Label/Label.js';
import { inputContainer } from './styles.js';
import { createElement as jsx } from '../../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';

var _excluded = ["size", "status", "iconBefore", "iconAfter", "label", "inline", "id", "containerAttrs"];

var Input = function Input(_ref, forwardedRef) {
  var _ref$size = _ref.size,
      size = _ref$size === void 0 ? "md" : _ref$size,
      _ref$status = _ref.status,
      status = _ref$status === void 0 ? "valid" : _ref$status,
      iconBefore = _ref.iconBefore,
      iconAfter = _ref.iconAfter,
      label = _ref.label,
      _ref$inline = _ref.inline,
      inline = _ref$inline === void 0 ? false : _ref$inline,
      id = _ref.id,
      containerAttrs = _ref.containerAttrs,
      rest = _objectWithoutProperties(_ref, _excluded);

  var IconBefore = iconBefore;
  var IconAfter = iconAfter;
  var hasLabel = Boolean(label);
  var containerClasses = classNames({
    valid: status === "valid",
    error: status === "error",
    "with-prefix-icon": Boolean(iconBefore),
    "with-suffix-icon": Boolean(iconAfter),
    inline: hasLabel && inline,
    disabled: Boolean(rest === null || rest === void 0 ? void 0 : rest.disabled)
  });
  return jsx("div", _extends({
    css: function css(theme) {
      return inputContainer(theme, {
        size: size
      });
    },
    className: containerClasses
  }, containerAttrs), hasLabel && jsx(Label, {
    htmlFor: id
  }, label), jsx("div", {
    className: "input-wrapper"
  }, IconBefore && jsx("span", {
    className: "prefix-icon",
    "data-testid": "input-icon-before"
  }, jsx(IconBefore, {
    height: 32
  })), jsx("input", _extends({
    ref: forwardedRef,
    id: id
  }, rest)), IconAfter && jsx("span", {
    className: "suffix-icon",
    "data-testid": "input-icon-after"
  }, jsx(IconAfter, {
    height: 32
  }))));
};

var Input$1 = /*#__PURE__*/forwardRef(Input);

export { Input$1 as default };
//# sourceMappingURL=Input.js.map
