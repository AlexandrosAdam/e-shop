
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../../_virtual/_rollupPluginBabelHelpers.js';
import '../../../../node_modules/core-js/modules/es.array.concat.js';
import 'react';
import classNames from '../../../../node_modules/classnames/index.js';
import { radioButton } from './styles.js';
import { createElement as jsx } from '../../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';

var _excluded = ["index", "label", "value", "selectedValue", "onClick", "size"];

var RadioButton = function RadioButton(_ref) {
  var index = _ref.index,
      label = _ref.label,
      value = _ref.value,
      selectedValue = _ref.selectedValue,
      onClick = _ref.onClick,
      size = _ref.size,
      rest = _objectWithoutProperties(_ref, _excluded);

  var handleClick = function handleClick(e) {
    e.preventDefault();
    onClick(value);
  };

  var cssClasses = classNames({
    "is-selected": value === selectedValue
  });
  var propHTMLClass = rest !== null && rest !== void 0 && rest.className ? rest === null || rest === void 0 ? void 0 : rest.className : "";
  return jsx("button", _extends({
    id: "radio-".concat(index),
    className: "".concat(cssClasses).concat(propHTMLClass),
    onClick: handleClick,
    css: function css(theme) {
      return radioButton(theme, {
        size: size
      });
    },
    "aria-selected": value === selectedValue
  }, rest), label);
};

export { RadioButton as default };
//# sourceMappingURL=RadioButton.js.map
