{"version":3,"file":"usePagination.js","sources":["../../../../../src/components/Pagination/usePagination.ts"],"sourcesContent":["import { useMemo } from \"react\";\n\nexport const ellipsis = \"...\";\n\nconst range = (start: number, end: number) => {\n  const length = end - start + 1;\n  /*\n  \tCreate an array of certain length and set the elements within it from\n    start value to end value.\n  */\n  return Array.from({ length }, (_, idx) => idx + start);\n};\n\nconst FIRST_PAGE_INDEX = 1; // first page index\nconst NO_DISPLAYING_BOXES_WITHOUT_ELLIPSIS = 5; // NO_DISPLAYING_BOXES is determined as siblingCount + firstPage + lastPage + currentPage + 2*DOTS\n\nexport const usePagination = (\n  currentPage: number,\n  totalPages: number,\n  siblingCount = 1,\n): (string | number)[] => {\n  return useMemo(() => {\n    const totalDisplyedBoxes = siblingCount + NO_DISPLAYING_BOXES_WITHOUT_ELLIPSIS;\n\n    /*\n      Case 1:\n      If the number of pages is less than the page numbers we want to show in our\n      paginationComponent, we return the range [1..totalPages]\n    */\n    if (totalDisplyedBoxes >= totalPages) {\n      return range(FIRST_PAGE_INDEX, totalPages);\n    }\n\n    // Calculate left and right sibling index and make sure they are within range 1 and totalPages\n    const leftSiblingIndex = Math.max(currentPage - siblingCount, FIRST_PAGE_INDEX);\n    const rightSiblingIndex = Math.min(currentPage + siblingCount, totalPages);\n\n    // We do not show dots just when there is just one page number to be inserted between\n    // the extremes of sibling and the page limits i.e 1 and totalPages.\n    // Hence we are using leftSiblingIndex > 2 and rightSiblingIndex < totalPages - 2\n    const shouldShowLeftDots = leftSiblingIndex > 2;\n    const shouldShowRightDots = rightSiblingIndex < totalPages - 2;\n\n    /*\n    \tCase 2: No left dots to show, but rights dots to be shown\n    */\n    if (!shouldShowLeftDots && shouldShowRightDots) {\n      const leftItemCount = 3 + 2 * siblingCount;\n      const leftRange = range(1, leftItemCount);\n\n      return [...leftRange, ellipsis, totalPages];\n    }\n\n    /*\n    \tCase 3: No right dots to show, but left dots to be shown\n    */\n    if (shouldShowLeftDots && !shouldShowRightDots) {\n      const rightItemCount = 3 + 2 * siblingCount;\n      const rightRange = range(totalPages - rightItemCount + 1, totalPages);\n      return [FIRST_PAGE_INDEX, ellipsis, ...rightRange];\n    }\n\n    /*\n    \tCase 4: Both left and right dots to be shown\n    */\n    if (shouldShowLeftDots && shouldShowRightDots) {\n      const middleRange = range(leftSiblingIndex, rightSiblingIndex);\n      return [FIRST_PAGE_INDEX, ellipsis, ...middleRange, ellipsis, totalPages];\n    }\n\n    return [];\n  }, [currentPage, totalPages]);\n};\n"],"names":["ellipsis","range","start","end","length","Array","from","_","idx","FIRST_PAGE_INDEX","NO_DISPLAYING_BOXES_WITHOUT_ELLIPSIS","usePagination","currentPage","totalPages","siblingCount","useMemo","totalDisplyedBoxes","leftSiblingIndex","Math","max","rightSiblingIndex","min","shouldShowLeftDots","shouldShowRightDots","leftItemCount","leftRange","rightItemCount","rightRange","middleRange"],"mappings":"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"}