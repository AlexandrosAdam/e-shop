{"version":3,"file":"styles.js","sources":["../../../../../src/components/Grid/styles.ts"],"sourcesContent":["import { css, SerializedStyles } from \"@emotion/react\";\nimport { mq, breakpoints } from \"@theme/utils/breakpoints\";\n\nconst breakpointsKeys = Object.keys(breakpoints);\n\nconst getCSSProp = (prop: string, attr: string) => `${prop}: ${attr}`;\n\ntype GridProp = string | (number | null | undefined)[] | null;\n\nconst getCSSResponsiveProps = (prop: string, attrs: GridProp) => {\n  if (typeof attrs === \"string\") return getCSSProp(prop, attrs);\n\n  return attrs?.map((value, i) => {\n    if (value) {\n      return `\n          ${mq[breakpointsKeys[i]]} {\n            ${prop}: ${value};\n          }\n        `;\n    }\n\n    return \"\";\n  });\n};\n\nconst generateGridTemplates = (attrs: GridProp) => {\n  const prop = \"grid-template-columns\";\n\n  if (typeof attrs === \"string\") return `${prop}: repeat(${attrs}, 1fr)`;\n\n  return attrs?.map((value, i) => {\n    if (value) {\n      return `\n          ${mq[breakpointsKeys[i]]} {\n            ${prop}: repeat(${value}, 1fr);\n          }\n        `;\n    }\n\n    return \"\";\n  });\n};\n\nexport const gridContainer = ({\n  gap,\n  templateColumns,\n  columnGap,\n  rowGap,\n}: {\n  gap: number;\n  templateColumns: GridProp;\n  columnGap: number | undefined;\n  rowGap: number | undefined;\n}): SerializedStyles => css`\n  display: grid;\n  ${gap && `grid-gap: ${gap}rem`};\n  ${rowGap && `row-gap: ${rowGap}rem`};\n  ${columnGap && `column-gap: ${columnGap}rem`};\n  ${generateGridTemplates(templateColumns)}\n`;\n\nconst generateGridSpan = (prop: string, attrs: GridProp) => {\n  if (typeof attrs === \"string\") return `${prop}: span ${attrs}`;\n\n  return attrs?.map((value, i) => {\n    if (value) {\n      return `\n          ${mq[breakpointsKeys[i]]} {\n            ${prop}: span ${value};\n          }\n        `;\n    }\n\n    return \"\";\n  });\n};\n\nexport const gridItem = ({\n  colSpan,\n  colStart,\n  colEnd,\n  rowSpan,\n  rowStart,\n  rowEnd,\n}: {\n  colSpan: GridProp;\n  colStart: GridProp;\n  colEnd: GridProp;\n  rowSpan: GridProp;\n  rowStart: GridProp;\n  rowEnd: GridProp;\n}): SerializedStyles => {\n  return css`\n    ${colSpan && generateGridSpan(\"grid-column\", colSpan)};\n    ${colStart && getCSSResponsiveProps(\"grid-column-start\", colStart)};\n    ${colEnd && getCSSResponsiveProps(\"grid-column-end\", colEnd)};\n    ${rowSpan && generateGridSpan(\"grid-row\", rowSpan)};\n    ${rowStart && getCSSResponsiveProps(\"grid-row-start\", rowStart)};\n    ${rowEnd && getCSSResponsiveProps(\"grid-row-end\", rowEnd)};\n  `;\n};\n"],"names":["breakpointsKeys","Object","keys","breakpoints","getCSSProp","prop","attr","getCSSResponsiveProps","attrs","map","value","i","mq","generateGridTemplates","gridContainer","gap","templateColumns","columnGap","rowGap","css","generateGridSpan","gridItem","colSpan","colStart","colEnd","rowSpan","rowStart","rowEnd"],"mappings":"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"}