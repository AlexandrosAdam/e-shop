{"version":3,"file":"Grid.js","sources":["../../../../../src/components/Grid/Grid.tsx"],"sourcesContent":["import React, { FC } from \"react\";\nimport { gridContainer, gridItem } from \"./styles\";\n\ntype NumberOrNull = number | null;\ntype HTMLWrapperElement = \"div\" | \"article\" | \"section\";\n\nexport type ResponsiveValues =\n  | [NumberOrNull, NumberOrNull, NumberOrNull?, NumberOrNull?, NumberOrNull?, NumberOrNull?]\n  | number;\n\nexport type GridProps = React.HTMLAttributes<HTMLElement> & {\n  templateColumns: ResponsiveValues;\n  gap?: number;\n  columnGap?: number;\n  rowGap?: number;\n  as?: HTMLWrapperElement;\n};\n\ntype GridCompoundProps = {\n  Item: FC<GridItemProps>;\n};\n\nconst generateGridValues = (\n  values: ResponsiveValues | \"auto\" | undefined,\n): (number | null | undefined)[] | string | null => {\n  switch (typeof values) {\n    case \"undefined\":\n      return null;\n    case \"string\":\n      return values;\n    case \"number\":\n      return values.toString();\n    default:\n      return values.map((value) => value);\n  }\n};\n\nconst Grid: FC<GridProps> & GridCompoundProps = (props) => {\n  const { gap = 2, columnGap, rowGap, templateColumns, as = \"div\", children, ...rest } = props;\n  const templateColumnAttrs = generateGridValues(templateColumns);\n  const Component = as;\n\n  return (\n    <Component\n      css={gridContainer({ templateColumns: templateColumnAttrs, gap, columnGap, rowGap })}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\ntype GridItemProps = React.HTMLAttributes<HTMLElement> & {\n  colSpan?: ResponsiveValues | \"auto\";\n  colStart?: ResponsiveValues | \"auto\";\n  colEnd?: ResponsiveValues | \"auto\";\n  rowSpan?: ResponsiveValues | \"auto\";\n  rowStart?: ResponsiveValues | \"auto\";\n  rowEnd?: ResponsiveValues | \"auto\";\n  as?: HTMLWrapperElement;\n};\n\nconst Item: FC<GridItemProps> = (props) => {\n  const {\n    colSpan,\n    colStart,\n    colEnd,\n    rowSpan,\n    rowStart,\n    rowEnd,\n    as = \"div\",\n    children,\n    ...rest\n  } = props;\n  const colSpanAttrs = generateGridValues(colSpan);\n  const colStartAttrs = generateGridValues(colStart);\n  const colEndAttrs = generateGridValues(colEnd);\n  const rowSpanAttrs = generateGridValues(rowSpan);\n  const rowStartAttrs = generateGridValues(rowStart);\n  const rowEndAttrs = generateGridValues(rowEnd);\n  const Component = as;\n\n  return (\n    <Component\n      css={gridItem({\n        colSpan: colSpanAttrs,\n        colStart: colStartAttrs,\n        colEnd: colEndAttrs,\n        rowSpan: rowSpanAttrs,\n        rowStart: rowStartAttrs,\n        rowEnd: rowEndAttrs,\n      })}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nGrid.Item = Item;\n\nexport default Grid;\n"],"names":["generateGridValues","values","toString","map","value","Grid","props","gap","columnGap","rowGap","templateColumns","as","children","rest","templateColumnAttrs","Component","___EmotionJSX","gridContainer","Item","colSpan","colStart","colEnd","rowSpan","rowStart","rowEnd","colSpanAttrs","colStartAttrs","colEndAttrs","rowSpanAttrs","rowStartAttrs","rowEndAttrs","gridItem"],"mappings":"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"}