
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import 'react';
import { createElement as jsx, Global } from '../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';
import cjs from '../../../node_modules/deepmerge/dist/cjs.js';
import defaultTheme from '../../theme/default/defaultTheme.js';
import defaultGlobals from '../../theme/utils/global.js';
import { generateTypeScaleSizes, DEFAULT_TYPESCALE_CONFIG } from '../../theme/utils/typography.js';
import '../../../node_modules/modern-normalize/modern-normalize.css.js';
import { b as ThemeProvider$1 } from '../../../node_modules/@emotion/react/dist/emotion-element-cbed451f.browser.esm.js';

var ThemeProvider = function ThemeProvider(_ref) {
  var _ref$typeScaleConfig = _ref.typeScaleConfig,
      typeScaleConfig = _ref$typeScaleConfig === void 0 ? {} : _ref$typeScaleConfig,
      _ref$theme = _ref.theme,
      theme = _ref$theme === void 0 ? {} : _ref$theme,
      _ref$globalStyles = _ref.globalStyles,
      globalStyles = _ref$globalStyles === void 0 ? {} : _ref$globalStyles,
      children = _ref.children;
  var mergedTypeScaleConfig = cjs(DEFAULT_TYPESCALE_CONFIG, typeScaleConfig);
  var typeScaleSizes = generateTypeScaleSizes(mergedTypeScaleConfig);
  var mergedTheme = cjs.all([defaultTheme, theme, {
    typeScaleSizes: typeScaleSizes
  }, {
    body: {
      lineHeight: mergedTypeScaleConfig.lineHeight
    }
  }]);
  return jsx(ThemeProvider$1, {
    theme: mergedTheme
  }, jsx(Global, {
    styles: defaultGlobals
  }), globalStyles && jsx(Global, {
    styles: globalStyles
  }), children);
};

export { ThemeProvider as default };
//# sourceMappingURL=ThemeProvider.js.map
