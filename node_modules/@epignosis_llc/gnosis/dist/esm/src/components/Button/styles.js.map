{"version":3,"file":"styles.js","sources":["../../../../../src/components/Button/styles.ts"],"sourcesContent":["import { css, Theme, SerializedStyles } from \"@emotion/react\";\nimport { Color, Size } from \"./Button\";\nimport { hexToRGBA } from \"@theme/default/colors\";\n\ntype ButtonAttrs = {\n  color: Color;\n  block: boolean;\n  size: Size;\n  noGutters: boolean;\n};\n\nconst roundDimensions = {\n  md: \"3.5rem\",\n  lg: \"5rem\",\n};\n\nconst baseButton = (\n  { typeScaleSizes }: { typeScaleSizes: Theme[\"typeScaleSizes\"] },\n  { size, block, noGutters }: Omit<ButtonAttrs, \"color\">,\n): SerializedStyles => {\n  const fontSizes = {\n    md: typeScaleSizes.sm,\n    lg: typeScaleSizes.lg,\n  };\n  const btnHeightDimensions = {\n    md: \"2.5rem\",\n    lg: \"3rem\",\n  };\n  const btnPadding = {\n    md: \"0 1.75rem\",\n    lg: \"0 3rem\",\n  };\n\n  return css`\n    position: relative;\n    font-size: ${fontSizes[size]};\n    height: ${btnHeightDimensions[size]};\n    min-width: ${btnHeightDimensions[size]};\n    ${block ? \"width: 100%\" : \"\"};\n    display: inline-flex;\n    align-items: center;\n    justify-content: center;\n    padding: ${noGutters ? 0 : btnPadding[size]};\n    border-radius: 5px;\n    line-height: 1.125rem;\n    cursor: pointer;\n    transition: background-color 0.2s ease-in, color 0.2s ease-in, border-color 0.2s ease-in,\n      box-shadow 0.2s ease;\n  `;\n};\n\nconst solidButton = (button: Theme[\"button\"], color: Color): SerializedStyles => css`\n  color: ${button[color].default.color};\n  background-color: ${button[color].default.background};\n  border: 1px solid ${button[color].default.borderColor};\n\n  &:hover {\n    color: ${button[color].hover.color};\n    background-color: ${button[color].hover.background};\n    border-color: ${button[color].hover.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].hover.color};\n      }\n    }\n  }\n\n  &:focus {\n    color: ${button[color].hover.color};\n    background-color: ${button[color].hover.background};\n    border-color: ${button[color].hover.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].hover.color};\n      }\n    }\n  }\n\n  &:active {\n    color: ${button[color].active.color};\n    background-color: ${button[color].active.background};\n    border-color: ${button[color].active.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].active.color};\n      }\n    }\n  }\n`;\n\nconst outlineButton = (button: Theme[\"button\"], color: Color): SerializedStyles => css`\n  color: ${button[color].outline.color};\n  background-color: transparent;\n  border: 1px solid ${button[color].outline.borderColor};\n\n  &:hover {\n    color: ${button[color].hover.color};\n    background-color: ${button[color].hover.background};\n    border-color: ${button[color].hover.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].hover.color};\n      }\n    }\n  }\n\n  &:focus {\n    color: ${button[color].hover.color};\n    background-color: ${button[color].hover.background};\n    border-color: ${button[color].hover.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].hover.color};\n      }\n    }\n  }\n\n  &:active {\n    color: ${button[color].active.color};\n    background-color: ${button[color].active.background};\n    border-color: ${button[color].active.borderColor};\n\n    .loading-container {\n      span > span {\n        background: ${button[color].active.color};\n      }\n    }\n  }\n`;\n\nconst ghostButton = (button: Theme[\"button\"], color: Color): SerializedStyles => css`\n  background-color: transparent;\n  border: none;\n\n  &:hover {\n    color: ${button[color].ghost.color};\n    background-color: ${hexToRGBA(button[color].ghost.background, 0.16)};\n  }\n`;\n\nconst linkButton = (button: Theme[\"button\"], color: Color): SerializedStyles => css`\n  color: ${button[color].link.color};\n  background-color: transparent;\n  border: none;\n\n  &:hover {\n    color: ${button[color].link.hoverColor};\n  }\n`;\n\nconst iconBeforeButton = (size: Size): SerializedStyles => {\n  const btnPadding = {\n    md: \"0 1.75rem 0 1.25rem\",\n    lg: \"0 3rem 0 1.875rem\",\n  };\n\n  return css`\n    padding: ${btnPadding[size]};\n\n    .icon {\n      margin-right: 0.5rem;\n    }\n  `;\n};\nconst iconAfterButton = (size: Size): SerializedStyles => {\n  const btnPadding = {\n    md: \"0 1.25rem 0 1.75rem\",\n    lg: \"0 1.875rem 0 3rem\",\n  };\n\n  return css`\n    padding: ${btnPadding[size]};\n\n    .icon {\n      margin-left: 0.5rem;\n    }\n  `;\n};\n\nexport const btnContainer = (\n  { typeScaleSizes, button }: Theme,\n  { color, size, ...attrs }: ButtonAttrs,\n): SerializedStyles => {\n  return css`\n    ${baseButton({ typeScaleSizes }, { size, ...attrs })};\n\n    &.solid {\n      ${solidButton(button, color)};\n    }\n\n    &.outline {\n      ${outlineButton(button, color)};\n    }\n\n    &.ghost {\n      ${ghostButton(button, color)};\n    }\n\n    &.link {\n      ${linkButton(button, color)};\n    }\n\n    &.icon-before {\n      ${iconBeforeButton(size)};\n    }\n\n    &.icon-after {\n      ${iconAfterButton(size)}\n    }\n\n    &:disabled,\n    &.disabled {\n      &,\n      &:hover,\n      &:focus,\n      &:active {\n        color: ${button.disabled.color};\n        background-color: ${button.disabled.background};\n        border-color: ${button.disabled.borderColor};\n        cursor: not-allowed;\n\n        .loading-container {\n          span > span {\n            background: ${button.disabled.color};\n          }\n        }\n      }\n    }\n\n    &.rounded {\n      width: ${roundDimensions[size]};\n      height: ${roundDimensions[size]};\n      padding: 0;\n      border-radius: 50%;\n\n      div {\n        height: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: center;\n      }\n    }\n\n    .loading-container {\n      span > span {\n        background: ${button[color].default.color};\n      }\n    }\n\n    .btn-text {\n      display: inline-flex;\n    }\n  `;\n};\n"],"names":["roundDimensions","md","lg","baseButton","typeScaleSizes","size","block","noGutters","fontSizes","sm","btnHeightDimensions","btnPadding","css","solidButton","button","color","background","borderColor","hover","active","outlineButton","outline","ghostButton","ghost","hexToRGBA","linkButton","link","hoverColor","iconBeforeButton","iconAfterButton","btnContainer","attrs","_objectSpread","disabled"],"mappings":"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"}