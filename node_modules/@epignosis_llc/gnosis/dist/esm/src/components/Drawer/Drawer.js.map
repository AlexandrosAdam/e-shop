{"version":3,"file":"Drawer.js","sources":["../../../../../src/components/Drawer/Drawer.tsx"],"sourcesContent":["import React, { Children, cloneElement, FC, ReactElement, useEffect } from \"react\";\nimport { createPortal } from \"react-dom\";\nimport { AnimatePresence, m, Variants, MotionStyle, domAnimation, LazyMotion } from \"framer-motion\";\nimport classNames from \"classnames\";\nimport { drawerContainer } from \"./styles\";\nimport Header, { HeaderProps } from \"./components/Header\";\nimport Body from \"./components/Body\";\nimport Mask from \"./components/Mask\";\nimport Footer from \"./components/Footer\";\n\ntype DialogVariants = {\n  placement: \"left\" | \"right\";\n  width: string;\n};\n\nconst dialogVariants: Variants = {\n  initial: ({ placement, width }: DialogVariants) => ({\n    opacity: 0,\n    x: placement === \"right\" ? \"100%\" : `-${width}`,\n    transition: {\n      type: \"tween\",\n    },\n  }),\n  expanded: () => ({\n    opacity: 1,\n    x: 0,\n    transition: {\n      type: \"tween\",\n    },\n  }),\n};\n\nconst DRAWER_ROOT = \"drawerRoot\";\n\nconst DrawerRoot: FC = () => <div id={DRAWER_ROOT} />;\n\nexport type DrawerProps = React.HTMLAttributes<HTMLDivElement> & {\n  isOpen: boolean;\n  onClose: () => void;\n  showMask?: boolean;\n  placement?: \"left\" | \"right\";\n  width?: string;\n  dialogStyles?: MotionStyle;\n  dialogClassName?: string;\n};\n\ntype DrawerCompoundProps = {\n  Header: FC<Omit<HeaderProps, \"onClose\"> & { closable?: boolean }>;\n  Body: FC;\n  Footer: FC;\n  Root: FC;\n};\n\nconst Drawer: FC<DrawerProps> & DrawerCompoundProps = (props) => {\n  const {\n    isOpen,\n    onClose,\n    placement = \"left\",\n    showMask = true,\n    width = \"31.5rem\",\n    dialogStyles,\n    dialogClassName,\n    children,\n    ...rest\n  } = props;\n  const clonedChildren = Children.map(children, (child) => {\n    return (\n      child &&\n      cloneElement(child as ReactElement, {\n        onClose: (child as ReactElement).props?.closable && onClose,\n      })\n    );\n  });\n  const drawerEl = document.getElementById(DRAWER_ROOT);\n  const dialogClassNames = classNames({\n    dialog: true,\n    \"placement-left\": placement === \"left\",\n    \"placement-right\": placement === \"right\",\n    [dialogClassName ?? \"\"]: dialogClassName,\n  });\n  const drawer = (\n    <LazyMotion features={domAnimation}>\n      <AnimatePresence>\n        {isOpen && (\n          <div css={drawerContainer(width)} data-testid=\"drawer\" {...rest}>\n            {showMask && <Mask onClose={onClose} />}\n            <m.div\n              id=\"drawer-dialog\"\n              style={dialogStyles}\n              className={dialogClassNames}\n              aria-expanded={isOpen}\n              aria-hidden={!isOpen}\n              aria-modal=\"true\"\n              initial=\"initial\"\n              animate=\"expanded\"\n              exit=\"initial\"\n              variants={dialogVariants}\n              custom={{ placement, width }}\n            >\n              {clonedChildren}\n            </m.div>\n          </div>\n        )}\n      </AnimatePresence>\n    </LazyMotion>\n  );\n\n  useEffect(() => {\n    if (isOpen) {\n      (document.querySelector(\"body\") as HTMLBodyElement).style.overflow = \"hidden\";\n    } else {\n      (document.querySelector(\"body\") as HTMLBodyElement).style.overflow = \"\";\n    }\n  }, [isOpen]);\n\n  return drawerEl && createPortal(drawer, drawerEl);\n};\n\nDrawer.Header = Header;\nDrawer.Body = Body;\nDrawer.Footer = Footer;\nDrawer.Root = DrawerRoot;\n\nexport default Drawer;\n"],"names":["dialogVariants","initial","placement","width","opacity","x","transition","type","expanded","DRAWER_ROOT","DrawerRoot","___EmotionJSX","Drawer","props","isOpen","onClose","showMask","dialogStyles","dialogClassName","children","rest","clonedChildren","Children","map","child","cloneElement","closable","drawerEl","document","getElementById","dialogClassNames","classNames","dialog","drawer","domAnimation","drawerContainer","useEffect","querySelector","style","overflow","createPortal","Header","Body","Footer","Root"],"mappings":"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"}