
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, defineProperty as _defineProperty, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import '../../../node_modules/core-js/modules/es.array.map.js';
import { Children, cloneElement, useEffect } from 'react';
import { createPortal } from 'react-dom';
import classNames from '../../../node_modules/classnames/index.js';
import { drawerContainer } from './styles.js';
import Header from './components/Header.js';
import Body from './components/Body.js';
import Mask from './components/Mask.js';
import Footer from './components/Footer.js';
import { createElement as jsx } from '../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';
import { AnimatePresence } from '../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs.js';
import { m } from '../../../node_modules/framer-motion/dist/es/render/dom/motion-minimal.mjs.js';
import { domAnimation } from '../../../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs.js';
import { LazyMotion } from '../../../node_modules/framer-motion/dist/es/components/LazyMotion/index.mjs.js';

var _excluded = ["isOpen", "onClose", "placement", "showMask", "width", "dialogStyles", "dialogClassName", "children"];
var dialogVariants = {
  initial: function initial(_ref) {
    var placement = _ref.placement,
        width = _ref.width;
    return {
      opacity: 0,
      x: placement === "right" ? "100%" : "-".concat(width),
      transition: {
        type: "tween"
      }
    };
  },
  expanded: function expanded() {
    return {
      opacity: 1,
      x: 0,
      transition: {
        type: "tween"
      }
    };
  }
};
var DRAWER_ROOT = "drawerRoot";

var DrawerRoot = function DrawerRoot() {
  return jsx("div", {
    id: DRAWER_ROOT
  });
};

var Drawer = function Drawer(props) {
  var isOpen = props.isOpen,
      onClose = props.onClose,
      _props$placement = props.placement,
      placement = _props$placement === void 0 ? "left" : _props$placement,
      _props$showMask = props.showMask,
      showMask = _props$showMask === void 0 ? true : _props$showMask,
      _props$width = props.width,
      width = _props$width === void 0 ? "31.5rem" : _props$width,
      dialogStyles = props.dialogStyles,
      dialogClassName = props.dialogClassName,
      children = props.children,
      rest = _objectWithoutProperties(props, _excluded);

  var clonedChildren = Children.map(children, function (child) {
    var _props;

    return child && /*#__PURE__*/cloneElement(child, {
      onClose: ((_props = child.props) === null || _props === void 0 ? void 0 : _props.closable) && onClose
    });
  });
  var drawerEl = document.getElementById(DRAWER_ROOT);
  var dialogClassNames = classNames(_defineProperty({
    dialog: true,
    "placement-left": placement === "left",
    "placement-right": placement === "right"
  }, dialogClassName !== null && dialogClassName !== void 0 ? dialogClassName : "", dialogClassName));

  var drawer = jsx(LazyMotion, {
    features: domAnimation
  }, jsx(AnimatePresence, null, isOpen && jsx("div", _extends({
    css: drawerContainer(width),
    "data-testid": "drawer"
  }, rest), showMask && jsx(Mask, {
    onClose: onClose
  }), jsx(m.div, {
    id: "drawer-dialog",
    style: dialogStyles,
    className: dialogClassNames,
    "aria-expanded": isOpen,
    "aria-hidden": !isOpen,
    "aria-modal": "true",
    initial: "initial",
    animate: "expanded",
    exit: "initial",
    variants: dialogVariants,
    custom: {
      placement: placement,
      width: width
    }
  }, clonedChildren))));

  useEffect(function () {
    if (isOpen) {
      document.querySelector("body").style.overflow = "hidden";
    } else {
      document.querySelector("body").style.overflow = "";
    }
  }, [isOpen]);
  return drawerEl && /*#__PURE__*/createPortal(drawer, drawerEl);
};

Drawer.Header = Header;
Drawer.Body = Body;
Drawer.Footer = Footer;
Drawer.Root = DrawerRoot;

export { Drawer as default };
//# sourceMappingURL=Drawer.js.map
