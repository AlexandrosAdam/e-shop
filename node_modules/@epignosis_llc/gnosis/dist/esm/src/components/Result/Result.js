
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import 'react';
import '../../../node_modules/@umijs/use-request/es/index.js';
import '../../../node_modules/lodash.isequal/index.js';
import '../../../node_modules/resize-observer-polyfill/dist/ResizeObserver.es.js';
import { useResponsive } from '../../../node_modules/@umijs/hooks/es/useResponsive/index.js';
import '../../../node_modules/screenfull/dist/screenfull.js';
import '../../../node_modules/intersection-observer/intersection-observer.js';
import '../../../node_modules/@umijs/hooks/es/useTextSelection/index.js';
import Heading from '../Heading/Heading.js';
import Text from '../Text/Text.js';
import { container } from './styles.js';
import { createElement as jsx } from '../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';

var _excluded = ["icon", "title", "info", "footer", "size"];

var getIconSize = function getIconSize(isMd) {
  return {
    md: isMd ? 100 : 75,
    lg: isMd ? 180 : 135
  };
};

var Result = function Result(_ref) {
  var icon = _ref.icon,
      title = _ref.title,
      info = _ref.info,
      footer = _ref.footer,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "lg" : _ref$size,
      rest = _objectWithoutProperties(_ref, _excluded);

  var _useResponsive = useResponsive(),
      md = _useResponsive.md;

  var Icon = icon;
  var iconSize = getIconSize(md);
  return jsx("article", _extends({
    "data-testid": "empty-state-container",
    css: function css(theme) {
      return container(theme, {
        size: size
      });
    }
  }, rest), Icon && jsx(Icon, {
    height: iconSize[size],
    "data-testid": "result-icon"
  }), jsx("div", {
    className: "body"
  }, jsx(Heading, {
    as: "h3"
  }, title), info && jsx(Text, {
    fontSize: size,
    as: "p"
  }, info)), footer && jsx("footer", null, footer));
};

export { Result as default };
//# sourceMappingURL=Result.js.map
