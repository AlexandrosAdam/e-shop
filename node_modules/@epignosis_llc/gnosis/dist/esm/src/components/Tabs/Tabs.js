
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, slicedToArray as _slicedToArray, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import '../../../node_modules/core-js/modules/es.array.map.js';
import '../../../node_modules/core-js/modules/es.parse-int.js';
import { useState, Children } from 'react';
import Select from '../FormElements/Select/Select.js';
import TabsNavItem from './TabsNavItem.js';
import TabsContent from './TabsContent.js';
import { container, tabsHeader } from './styles.js';
import { createElement as jsx } from '../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';

var _excluded = ["children", "stickyHeader", "responsiveHeader", "initialSelectedTab", "onChangeTab"];

var TabPane = function TabPane() {
  return null;
};

var Tabs = function Tabs(_ref) {
  var children = _ref.children,
      _ref$stickyHeader = _ref.stickyHeader,
      stickyHeader = _ref$stickyHeader === void 0 ? false : _ref$stickyHeader,
      _ref$responsiveHeader = _ref.responsiveHeader,
      responsiveHeader = _ref$responsiveHeader === void 0 ? false : _ref$responsiveHeader,
      _ref$initialSelectedT = _ref.initialSelectedTab,
      initialSelectedTab = _ref$initialSelectedT === void 0 ? 0 : _ref$initialSelectedT,
      onChangeTab = _ref.onChangeTab,
      rest = _objectWithoutProperties(_ref, _excluded);

  var _useState = useState(initialSelectedTab),
      _useState2 = _slicedToArray(_useState, 2),
      activeTab = _useState2[0],
      setActiveTab = _useState2[1];

  var tabTitles = Children.map(children, function (child, i) {
    return {
      index: i,
      title: child.props.title,
      fallbackTitle: typeof child.props.title === "string" ? child.props.title : child.props.fallbackTitle
    };
  });
  var tabPanes = Children.map(children, function (child, i) {
    return {
      index: i,
      content: child.props.children
    };
  });

  var onSelectTab = function onSelectTab(index) {
    setActiveTab(index);
    onChangeTab && onChangeTab(index);
  };

  var displayResponsiveHeader = (tabTitles === null || tabTitles === void 0 ? void 0 : tabTitles.length) && responsiveHeader;
  return jsx("section", _extends({
    css: container
  }, rest), jsx("nav", {
    css: function css(theme) {
      return tabsHeader(theme, {
        stickyHeader: stickyHeader
      });
    },
    role: "tablist"
  }, !displayResponsiveHeader && (tabTitles === null || tabTitles === void 0 ? void 0 : tabTitles.map(function (_ref2) {
    var index = _ref2.index,
        title = _ref2.title;
    return jsx(TabsNavItem, {
      key: index,
      index: index,
      title: title,
      isActive: activeTab === index,
      onSelectTab: onSelectTab
    });
  })), displayResponsiveHeader && jsx(Select, {
    "aria-label": "select tab",
    onChange: function onChange(index) {
      return onSelectTab(parseInt(index));
    }
  }, tabTitles === null || tabTitles === void 0 ? void 0 : tabTitles.map(function (_ref3) {
    var index = _ref3.index,
        fallbackTitle = _ref3.fallbackTitle;
    return jsx("option", {
      key: index,
      value: index
    }, fallbackTitle);
  }))), jsx("section", {
    id: "content",
    "aria-live": "polite",
    role: "region"
  }, (tabPanes === null || tabPanes === void 0 ? void 0 : tabPanes.length) && tabPanes.map(function (_ref4) {
    var index = _ref4.index,
        content = _ref4.content;
    return jsx(TabsContent, {
      key: index,
      index: index,
      content: content,
      isVisible: activeTab === index
    });
  })));
};

Tabs.TabPane = TabPane;

export { Tabs as default };
//# sourceMappingURL=Tabs.js.map
