
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { objectWithoutProperties as _objectWithoutProperties, extends as _extends } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import 'react';
import '../../../node_modules/react-spinners/index.js';
import { container } from './styles.js';
import { createElement as jsx } from '../../../node_modules/@emotion/react/dist/emotion-react.browser.esm.js';
import { __exports as reactSpinners } from '../../../_virtual/index2.js';

var _excluded = ["fullScreen", "size"];

var Loader = function Loader(_ref) {
  var _ref$fullScreen = _ref.fullScreen,
      fullScreen = _ref$fullScreen === void 0 ? false : _ref$fullScreen,
      _ref$size = _ref.size,
      size = _ref$size === void 0 ? "lg" : _ref$size,
      rest = _objectWithoutProperties(_ref, _excluded);

  return jsx("div", _extends({
    css: function css(theme) {
      return container(theme, {
        fullScreen: fullScreen,
        size: size
      });
    },
    "data-testid": "loader"
  }, rest, {
    className: "loading-container".concat(rest !== null && rest !== void 0 && rest.className ? " ".concat(rest === null || rest === void 0 ? void 0 : rest.className) : "")
  }), jsx(reactSpinners.PulseLoader, null));
};

export { Loader as default };
//# sourceMappingURL=Loader.js.map
