
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { defineProperty as _defineProperty } from '../../../_virtual/_rollupPluginBabelHelpers.js';
import '../../../node_modules/core-js/modules/es.array.for-each.js';
import '../../../node_modules/core-js/modules/es.object.to-string.js';
import '../../../node_modules/core-js/modules/web.dom-collections.for-each.js';
import '../../../node_modules/core-js/modules/es.object.assign.js';
import '../../../node_modules/core-js/modules/es.number.to-fixed.js';

var DEFAULT_TYPESCALE_CONFIG = {
  baseFontSize: 1,
  // rem
  lineHeight: 1.5715,
  sizeRatio: 1.125,
  // major second
  levels: {
    base: "md",
    up: ["lg", "xl", "2xl", "3xl", "4xl"],
    down: ["sm", "xs", "2xs"]
  }
};
var generateTypeScaleSizes = function generateTypeScaleSizes(typography) {
  var levels = _defineProperty({}, typography.levels.base, typography.baseFontSize);

  var levelSize = typography.baseFontSize;
  typography.levels.up.forEach(function (level) {
    levelSize = levelSize * typography.sizeRatio;
    Object.assign(levels, _defineProperty({}, level, levelSize.toFixed(3)));
  }); // Set the base font size so we can calculate correctly the "down" typescale levels

  levelSize = typography.baseFontSize;
  typography.levels.down.forEach(function (level) {
    levelSize = levelSize / typography.sizeRatio;
    Object.assign(levels, _defineProperty({}, level, levelSize.toFixed(3)));
  });
  var typeScale = new Proxy(levels, {
    get: function get(target, prop) {
      return "".concat(target[prop], "rem");
    }
  });
  return typeScale;
};

export { DEFAULT_TYPESCALE_CONFIG, generateTypeScaleSizes };
//# sourceMappingURL=typography.js.map
