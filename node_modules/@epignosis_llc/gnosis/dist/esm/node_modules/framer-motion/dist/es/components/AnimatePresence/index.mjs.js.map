{"version":3,"file":"index.mjs.js","sources":["../../../../../../../../node_modules/framer-motion/dist/es/components/AnimatePresence/index.mjs"],"sourcesContent":["import { __read, __spreadArray } from 'tslib';\nimport * as React from 'react';\nimport { useContext, useRef, cloneElement, Children, isValidElement } from 'react';\nimport { useForceUpdate } from '../../utils/use-force-update.mjs';\nimport { useIsMounted } from '../../utils/use-is-mounted.mjs';\nimport { PresenceChild } from './PresenceChild.mjs';\nimport { LayoutGroupContext } from '../../context/LayoutGroupContext.mjs';\nimport { useIsomorphicLayoutEffect } from '../../utils/use-isomorphic-effect.mjs';\nimport { useUnmountEffect } from '../../utils/use-unmount-effect.mjs';\n\nvar getChildKey = function (child) { return child.key || \"\"; };\nvar isDev = process.env.NODE_ENV !== \"production\";\nfunction updateChildLookup(children, allChildren) {\n    var seenChildren = isDev ? new Set() : null;\n    children.forEach(function (child) {\n        var key = getChildKey(child);\n        if (isDev && seenChildren && seenChildren.has(key)) {\n            console.warn(\"Children of AnimatePresence require unique keys. \\\"\".concat(key, \"\\\" is a duplicate.\"));\n            seenChildren.add(key);\n        }\n        allChildren.set(key, child);\n    });\n}\nfunction onlyElements(children) {\n    var filtered = [];\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\n    Children.forEach(children, function (child) {\n        if (isValidElement(child))\n            filtered.push(child);\n    });\n    return filtered;\n}\n/**\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\n *\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\n *\n * Any `motion` components that have an `exit` property defined will animate out when removed from\n * the tree.\n *\n * ```jsx\n * import { motion, AnimatePresence } from 'framer-motion'\n *\n * export const Items = ({ items }) => (\n *   <AnimatePresence>\n *     {items.map(item => (\n *       <motion.div\n *         key={item.id}\n *         initial={{ opacity: 0 }}\n *         animate={{ opacity: 1 }}\n *         exit={{ opacity: 0 }}\n *       />\n *     ))}\n *   </AnimatePresence>\n * )\n * ```\n *\n * You can sequence exit animations throughout a tree using variants.\n *\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\n * once all `motion` components have finished animating out. Likewise, any components using\n * `usePresence` all need to call `safeToRemove`.\n *\n * @public\n */\nvar AnimatePresence = function (_a) {\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter, _c = _a.presenceAffectsLayout, presenceAffectsLayout = _c === void 0 ? true : _c;\n    // We want to force a re-render once all exiting animations have finished. We\n    // either use a local forceRender function, or one from a parent context if it exists.\n    var _d = __read(useForceUpdate(), 1), forceRender = _d[0];\n    var forceRenderLayoutGroup = useContext(LayoutGroupContext).forceRender;\n    if (forceRenderLayoutGroup)\n        forceRender = forceRenderLayoutGroup;\n    var isMounted = useIsMounted();\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n    var filteredChildren = onlyElements(children);\n    var childrenToRender = filteredChildren;\n    var exiting = new Set();\n    // Keep a living record of the children we're actually rendering so we\n    // can diff to figure out which are entering and exiting\n    var presentChildren = useRef(childrenToRender);\n    // A lookup table to quickly reference components by key\n    var allChildren = useRef(new Map()).current;\n    // If this is the initial component render, just deal with logic surrounding whether\n    // we play onMount animations or not.\n    var isInitialRender = useRef(true);\n    useIsomorphicLayoutEffect(function () {\n        isInitialRender.current = false;\n        updateChildLookup(filteredChildren, allChildren);\n        presentChildren.current = childrenToRender;\n    });\n    useUnmountEffect(function () {\n        isInitialRender.current = true;\n        allChildren.clear();\n        exiting.clear();\n    });\n    if (isInitialRender.current) {\n        return (React.createElement(React.Fragment, null, childrenToRender.map(function (child) { return (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false, presenceAffectsLayout: presenceAffectsLayout }, child)); })));\n    }\n    // If this is a subsequent render, deal with entering and exiting children\n    childrenToRender = __spreadArray([], __read(childrenToRender), false);\n    // Diff the keys of the currently-present and target children to update our\n    // exiting list.\n    var presentKeys = presentChildren.current.map(getChildKey);\n    var targetKeys = filteredChildren.map(getChildKey);\n    // Diff the present children with our target children and mark those that are exiting\n    var numPresent = presentKeys.length;\n    for (var i = 0; i < numPresent; i++) {\n        var key = presentKeys[i];\n        if (targetKeys.indexOf(key) === -1) {\n            exiting.add(key);\n        }\n    }\n    // If we currently have exiting children, and we're deferring rendering incoming children\n    // until after all current children have exiting, empty the childrenToRender array\n    if (exitBeforeEnter && exiting.size) {\n        childrenToRender = [];\n    }\n    // Loop through all currently exiting components and clone them to overwrite `animate`\n    // with any `exit` prop they might have defined.\n    exiting.forEach(function (key) {\n        // If this component is actually entering again, early return\n        if (targetKeys.indexOf(key) !== -1)\n            return;\n        var child = allChildren.get(key);\n        if (!child)\n            return;\n        var insertionIndex = presentKeys.indexOf(key);\n        var onExit = function () {\n            allChildren.delete(key);\n            exiting.delete(key);\n            // Remove this child from the present children\n            var removeIndex = presentChildren.current.findIndex(function (presentChild) { return presentChild.key === key; });\n            presentChildren.current.splice(removeIndex, 1);\n            // Defer re-rendering until all exiting children have indeed left\n            if (!exiting.size) {\n                presentChildren.current = filteredChildren;\n                if (isMounted.current === false)\n                    return;\n                forceRender();\n                onExitComplete && onExitComplete();\n            }\n        };\n        childrenToRender.splice(insertionIndex, 0, React.createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\n    // the same tree between renders\n    childrenToRender = childrenToRender.map(function (child) {\n        var key = child.key;\n        return exiting.has(key) ? (child) : (React.createElement(PresenceChild, { key: getChildKey(child), isPresent: true, presenceAffectsLayout: presenceAffectsLayout }, child));\n    });\n    if (process.env.NODE_ENV !== \"production\" &&\n        exitBeforeEnter &&\n        childrenToRender.length > 1) {\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n    }\n    return (React.createElement(React.Fragment, null, exiting.size\n        ? childrenToRender\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\n};\n\nexport { AnimatePresence };\n"],"names":[],"mappings":"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"}