{"version":3,"file":"use-reduced-motion.mjs.js","sources":["../../../../../../../node_modules/framer-motion/dist/es/utils/use-reduced-motion.mjs"],"sourcesContent":["import { __read } from 'tslib';\nimport { useState, useContext } from 'react';\nimport { MotionConfigContext } from '../context/MotionConfigContext.mjs';\n\n// Does this device prefer reduced motion? Returns `null` server-side.\nvar prefersReducedMotion = { current: null };\nvar hasDetected = false;\nfunction initPrefersReducedMotion() {\n    hasDetected = true;\n    if (typeof window === \"undefined\")\n        return;\n    if (window.matchMedia) {\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n        var setReducedMotionPreferences = function () {\n            return (prefersReducedMotion.current = motionMediaQuery_1.matches);\n        };\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n/**\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\n *\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\n *\n * It will actively respond to changes and re-render your components with the latest setting.\n *\n * ```jsx\n * export function Sidebar({ isOpen }) {\n *   const shouldReduceMotion = useReducedMotion()\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\n *\n *   return (\n *     <motion.div animate={{\n *       opacity: isOpen ? 1 : 0,\n *       x: isOpen ? 0 : closedX\n *     }} />\n *   )\n * }\n * ```\n *\n * @return boolean\n *\n * @public\n */\nfunction useReducedMotion() {\n    /**\n     * Lazy initialisation of prefersReducedMotion\n     */\n    !hasDetected && initPrefersReducedMotion();\n    var _a = __read(useState(prefersReducedMotion.current), 1), shouldReduceMotion = _a[0];\n    /**\n     * TODO See if people miss automatically updating shouldReduceMotion setting\n     */\n    return shouldReduceMotion;\n}\nfunction useReducedMotionConfig() {\n    var reducedMotionPreference = useReducedMotion();\n    var reducedMotion = useContext(MotionConfigContext).reducedMotion;\n    if (reducedMotion === \"never\") {\n        return false;\n    }\n    else if (reducedMotion === \"always\") {\n        return true;\n    }\n    else {\n        return reducedMotionPreference;\n    }\n}\n\nexport { useReducedMotion, useReducedMotionConfig };\n"],"names":[],"mappings":";;;;;;;;;;;;AAIA;AACA,IAAI,oBAAoB,GAAG,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAC7C,IAAI,WAAW,GAAG,KAAK,CAAC;AACxB,SAAS,wBAAwB,GAAG;AACpC,IAAI,WAAW,GAAG,IAAI,CAAC;AACvB,IAAI,IAAI,OAAO,MAAM,KAAK,WAAW;AACrC,QAAQ,OAAO;AACf,IAAI,IAAI,MAAM,CAAC,UAAU,EAAE;AAC3B,QAAQ,IAAI,kBAAkB,GAAG,MAAM,CAAC,UAAU,CAAC,0BAA0B,CAAC,CAAC;AAC/E,QAAQ,IAAI,2BAA2B,GAAG,YAAY;AACtD,YAAY,QAAQ,oBAAoB,CAAC,OAAO,GAAG,kBAAkB,CAAC,OAAO,EAAE;AAC/E,SAAS,CAAC;AACV,QAAQ,kBAAkB,CAAC,WAAW,CAAC,2BAA2B,CAAC,CAAC;AACpE,QAAQ,2BAA2B,EAAE,CAAC;AACtC,KAAK;AACL,SAAS;AACT,QAAQ,oBAAoB,CAAC,OAAO,GAAG,KAAK,CAAC;AAC7C,KAAK;AACL,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,gBAAgB,GAAG;AAC5B;AACA;AACA;AACA,IAAI,CAAC,WAAW,IAAI,wBAAwB,EAAE,CAAC;AAC/C,IAAI,IAAI,EAAE,GAAG,MAAM,CAAC,QAAQ,CAAC,oBAAoB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,EAAE,kBAAkB,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;AAC3F;AACA;AACA;AACA,IAAI,OAAO,kBAAkB,CAAC;AAC9B,CAAC;AACD,SAAS,sBAAsB,GAAG;AAClC,IAAI,IAAI,uBAAuB,GAAG,gBAAgB,EAAE,CAAC;AACrD,IAAI,IAAI,aAAa,GAAG,UAAU,CAAC,mBAAmB,CAAC,CAAC,aAAa,CAAC;AACtE,IAAI,IAAI,aAAa,KAAK,OAAO,EAAE;AACnC,QAAQ,OAAO,KAAK,CAAC;AACrB,KAAK;AACL,SAAS,IAAI,aAAa,KAAK,QAAQ,EAAE;AACzC,QAAQ,OAAO,IAAI,CAAC;AACpB,KAAK;AACL,SAAS;AACT,QAAQ,OAAO,uBAAuB,CAAC;AACvC,KAAK;AACL;;;;"}