
  /**
   * @license
   * author: epignosis front-end team
   * @epignosis_llc/gnosis.js v2.2.1
   * Released under the MIT license.
   */

import { __read } from '../../../../tslib/tslib.es6.js';
import sync from '../../../../framesync/dist/es/index.mjs.js';
import { useState, useCallback } from 'react';
import { useIsMounted } from './use-is-mounted.mjs.js';

function useForceUpdate() {
    var isMounted = useIsMounted();
    var _a = __read(useState(0), 2), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];
    var forceRender = useCallback(function () {
        isMounted.current && setForcedRenderCount(forcedRenderCount + 1);
    }, [forcedRenderCount]);
    /**
     * Defer this to the end of the next animation frame in case there are multiple
     * synchronous calls.
     */
    var deferredForceRender = useCallback(function () { return sync.postRender(forceRender); }, [forceRender]);
    return [deferredForceRender, forcedRenderCount];
}

export { useForceUpdate };
//# sourceMappingURL=use-force-update.mjs.js.map
