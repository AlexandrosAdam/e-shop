{"version":3,"file":"spring.mjs.js","sources":["../../../../../../../../node_modules/popmotion/dist/es/animations/generators/spring.mjs"],"sourcesContent":["import { __rest } from 'tslib';\nimport { findSpring, calcAngularFreq } from '../utils/find-spring.mjs';\n\nconst durationKeys = [\"duration\", \"bounce\"];\nconst physicsKeys = [\"stiffness\", \"damping\", \"mass\"];\nfunction isSpringType(options, keys) {\n    return keys.some((key) => options[key] !== undefined);\n}\nfunction getSpringOptions(options) {\n    let springOptions = Object.assign({ velocity: 0.0, stiffness: 100, damping: 10, mass: 1.0, isResolvedFromDuration: false }, options);\n    if (!isSpringType(options, physicsKeys) &&\n        isSpringType(options, durationKeys)) {\n        const derived = findSpring(options);\n        springOptions = Object.assign(Object.assign(Object.assign({}, springOptions), derived), { velocity: 0.0, mass: 1.0 });\n        springOptions.isResolvedFromDuration = true;\n    }\n    return springOptions;\n}\nfunction spring(_a) {\n    var { from = 0.0, to = 1.0, restSpeed = 2, restDelta } = _a, options = __rest(_a, [\"from\", \"to\", \"restSpeed\", \"restDelta\"]);\n    const state = { done: false, value: from };\n    let { stiffness, damping, mass, velocity, duration, isResolvedFromDuration, } = getSpringOptions(options);\n    let resolveSpring = zero;\n    let resolveVelocity = zero;\n    function createSpring() {\n        const initialVelocity = velocity ? -(velocity / 1000) : 0.0;\n        const initialDelta = to - from;\n        const dampingRatio = damping / (2 * Math.sqrt(stiffness * mass));\n        const undampedAngularFreq = Math.sqrt(stiffness / mass) / 1000;\n        if (restDelta === undefined) {\n            restDelta = Math.min(Math.abs(to - from) / 100, 0.4);\n        }\n        if (dampingRatio < 1) {\n            const angularFreq = calcAngularFreq(undampedAngularFreq, dampingRatio);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (to -\n                    envelope *\n                        (((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) /\n                            angularFreq) *\n                            Math.sin(angularFreq * t) +\n                            initialDelta * Math.cos(angularFreq * t)));\n            };\n            resolveVelocity = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                return (dampingRatio *\n                    undampedAngularFreq *\n                    envelope *\n                    ((Math.sin(angularFreq * t) *\n                        (initialVelocity +\n                            dampingRatio *\n                                undampedAngularFreq *\n                                initialDelta)) /\n                        angularFreq +\n                        initialDelta * Math.cos(angularFreq * t)) -\n                    envelope *\n                        (Math.cos(angularFreq * t) *\n                            (initialVelocity +\n                                dampingRatio *\n                                    undampedAngularFreq *\n                                    initialDelta) -\n                            angularFreq *\n                                initialDelta *\n                                Math.sin(angularFreq * t)));\n            };\n        }\n        else if (dampingRatio === 1) {\n            resolveSpring = (t) => to -\n                Math.exp(-undampedAngularFreq * t) *\n                    (initialDelta +\n                        (initialVelocity + undampedAngularFreq * initialDelta) *\n                            t);\n        }\n        else {\n            const dampedAngularFreq = undampedAngularFreq * Math.sqrt(dampingRatio * dampingRatio - 1);\n            resolveSpring = (t) => {\n                const envelope = Math.exp(-dampingRatio * undampedAngularFreq * t);\n                const freqForT = Math.min(dampedAngularFreq * t, 300);\n                return (to -\n                    (envelope *\n                        ((initialVelocity +\n                            dampingRatio * undampedAngularFreq * initialDelta) *\n                            Math.sinh(freqForT) +\n                            dampedAngularFreq *\n                                initialDelta *\n                                Math.cosh(freqForT))) /\n                        dampedAngularFreq);\n            };\n        }\n    }\n    createSpring();\n    return {\n        next: (t) => {\n            const current = resolveSpring(t);\n            if (!isResolvedFromDuration) {\n                const currentVelocity = resolveVelocity(t) * 1000;\n                const isBelowVelocityThreshold = Math.abs(currentVelocity) <= restSpeed;\n                const isBelowDisplacementThreshold = Math.abs(to - current) <= restDelta;\n                state.done =\n                    isBelowVelocityThreshold && isBelowDisplacementThreshold;\n            }\n            else {\n                state.done = t >= duration;\n            }\n            state.value = state.done ? to : current;\n            return state;\n        },\n        flipTarget: () => {\n            velocity = -velocity;\n            [from, to] = [to, from];\n            createSpring();\n        },\n    };\n}\nspring.needsInterpolation = (a, b) => typeof a === \"string\" || typeof b === \"string\";\nconst zero = (_t) => 0;\n\nexport { spring };\n"],"names":[],"mappings":"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"}